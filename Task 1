#!/bin/bash
show_users() {
  cut -d: -f1,6 /etc/passwd | sort | while IFS=: read -r user dir; do
  echo "User: $user, Home Directory $dir"
  done
}
show_processes() {
  ps -e --sort=pid
}
show_help() {
  echo "Usage: $0 [options]
  Options:
  -u, --users Show list of users and their home directories
  -p, --processes Show list of running processes, sorted by PID
  -h, --help Show this message
  -l, --log PATH Redirect output to the specified log file
  -e, --errors PATH Redirect error output to the specified error file"
}
LOG_PATH=""
ERROR_PATH=""
ACTION=""
check_access() {
  local path="$1"
  if [[! -e "$path" ]]; then
    echo "Error: Path '$path' does not exist" >&2
    exit 1
  fi
}
while (("$#")); do
  case "$1" in
  -u | --users)
  ACTION="users"
  shift
  ;;
  -p | --processes)
  ACTION="processes"
  shift
  ;;
  -h | --help)
  show_help
  exit 0
  ;;
  -l | --log)
  if [ -n "$2" ] && [ "${2:0:1}" != "-" ]; then
    LOG_PATH="$2"
    check_access "$LOG_PATH"
    shift 2
  else
    echo "Error: Argument for $1 is missing" >&2
    exit 1
  fi
  ;;
  -e | --errors)
  if [ -n "$2" ] && [ "${2:0:1}" != "-" ]; then
    ERROR_PATH="$2"
    check_access "$ERROR_PATH"
    shift 2
  else
    echo "Error: Argument for $1 is missing" >&2
    exit 1
  fi
  ;;
  *)
  echo "Error: Unsupported flag $1" >&2
  show_help
  exit 1
  ;;
  esac
  done
if [[ -n "$LOG_PATH" ]]; then
  exec > "$LOG_PATH"
fi
case "$ACTION" in
users)
  show_users
  ;;
processes)
  show_processes
  ;;
*)
  echo "Error: No action specified" >&2
  exit 1
  ;;
esac
